name: Test direct dependencies on Linux and MacOS
on: [push, pull_request]
on:
  workflow_run:
    workflows: [nix-upstream]
    types: [completed]

jobs:
  _05-fetch-content:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        generator:
          - { name: Ninja, multi: false }
          - { name: Unix Makefiles, multi: false }
        shared:
          - ON
          - OFF
        flavor:
          - Debug
          - Release
    runs-on: ${{ matrix.platform }}
    env:
      generator: ${{ matrix.generator.name }}
      multi: ${{ matrix.generator.multi && 'true' || '' }}
      shared: ${{ matrix.shared }}
      flavor: ${{ matrix.flavor }}
      install_dir: /usr/local
      executable: five
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install environment
        uses: ./.github/actions/install-nix
        with:
          cache-key-python: ${{ secrets.CACHE_PYTHON }}
      - name: test project
        uses: ./.github/actions/test-project
        with:
          working-directory: 05-fetch-content

  _08-find-module:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        generator:
          - { name: Ninja, multi: false }
          - { name: Unix Makefiles, multi: false }
        shared:
          - ON
          - OFF
        flavor:
          - Debug
          - Release
        zero:
          - missing
          - half
          - full
    runs-on: ${{ matrix.platform }}
    env:
      generator: ${{ matrix.generator.name }}
      multi: ${{ matrix.generator.multi && 'true' || '' }}
      shared: ${{ matrix.shared }}
      flavor: ${{ matrix.flavor }}
      install_dir: /usr/local
      executable: eight
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install environment
        uses: ./.github/actions/install-nix
        with:
          cache-key-python: ${{ secrets.CACHE_PYTHON }}
      - name: install zero
        if: matrix.zero != 'missing'
        working-directory: 00-upstream
        run: |
          make build
          sudo install_dir="${install_dir}" make install
          make clean
      - name: remove zero configuration
        if: matrix.zero == 'half'
        run: sudo rm -rf ${install_dir}/lib/cmake/zero
      - name: test project
        uses: ./.github/actions/test-project
        with:
          working-directory: 08-find-module

  _09-external-project:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        generator:
          - { name: Ninja, multi: false }
          - { name: Unix Makefiles, multi: false }
        shared:
          - ON
          - OFF
        flavor:
          - Debug
          - Release
    runs-on: ${{ matrix.platform }}
    env:
      generator: ${{ matrix.generator.name }}
      multi: ${{ matrix.generator.multi && 'true' || '' }}
      shared: ${{ matrix.shared }}
      flavor: ${{ matrix.flavor }}
      install_dir: /usr/local
      executable: nine
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install environment
        uses: ./.github/actions/install-nix
        with:
          cache-key-python: ${{ secrets.CACHE_PYTHON }}
      - name: test project
        uses: ./.github/actions/test-project
        with:
          working-directory: 09-external-project
